diff --git a/node_modules/react-native-navigation/lib/ios/BottomTabsAppearancePresenter.m b/node_modules/react-native-navigation/lib/ios/BottomTabsAppearancePresenter.m
index b7ae635..7da4701 100644
--- a/node_modules/react-native-navigation/lib/ios/BottomTabsAppearancePresenter.m
+++ b/node_modules/react-native-navigation/lib/ios/BottomTabsAppearancePresenter.m
@@ -14,8 +14,14 @@ - (void)applyBackgroundColor:(UIColor *)backgroundColor translucent:(BOOL)transl
 
 - (void)setTabBarBackgroundColor:(UIColor *)backgroundColor {
     [self setTabBarOpaqueBackground];
-    for (UIViewController* childViewController in self.tabBarController.childViewControllers)
+    for (UIViewController* childViewController in self.tabBarController.childViewControllers) {
         childViewController.tabBarItem.standardAppearance.backgroundColor = backgroundColor;
+        #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+            if (@available(iOS 15.0, *)) {
+                childViewController.tabBarItem.scrollEdgeAppearance.backgroundColor = backgroundColor;
+            }
+        #endif
+    }
 }
 
 - (void)setTabBarTranslucent:(BOOL)translucent {
@@ -30,18 +36,36 @@ - (void)setTabBarDefaultBackground {
 }
 
 - (void)setTabBarTranslucentBackground {
-    for (UIViewController* childViewController in self.tabBarController.childViewControllers)
+    for (UIViewController* childViewController in self.tabBarController.childViewControllers) {
         [childViewController.tabBarItem.standardAppearance configureWithDefaultBackground];
+        #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+            if (@available(iOS 15.0, *)) {
+                [childViewController.tabBarItem.scrollEdgeAppearance configureWithDefaultBackground];
+            }
+        #endif
+    }
 }
 
 - (void)setTabBarTransparentBackground {
-    for (UIViewController* childViewController in self.tabBarController.childViewControllers)
+    for (UIViewController* childViewController in self.tabBarController.childViewControllers) {
         [childViewController.tabBarItem.standardAppearance configureWithTransparentBackground];
+        #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+            if (@available(iOS 15.0, *)) {
+                [childViewController.tabBarItem.scrollEdgeAppearance configureWithTransparentBackground];
+            }
+        #endif
+    }
 }
 
 - (void)setTabBarOpaqueBackground {
-    for (UIViewController* childViewController in self.tabBarController.childViewControllers)
+    for (UIViewController* childViewController in self.tabBarController.childViewControllers) {
         [childViewController.tabBarItem.standardAppearance configureWithOpaqueBackground];
+        #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+            if (@available(iOS 15.0, *)) {
+                [childViewController.tabBarItem.scrollEdgeAppearance configureWithOpaqueBackground];
+            }
+        #endif
+    }
 }
 
 @end
diff --git a/node_modules/react-native-navigation/lib/ios/RNNBottomTabsController.m b/node_modules/react-native-navigation/lib/ios/RNNBottomTabsController.m
index 91a92f0..338145d 100644
--- a/node_modules/react-native-navigation/lib/ios/RNNBottomTabsController.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNBottomTabsController.m
@@ -36,6 +36,12 @@ - (instancetype)initWithLayoutInfo:(RNNLayoutInfo *)layoutInfo
         self.tabBar.standardAppearance = [UITabBarAppearance new];
     }
     
+    #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+        if (@available(iOS 15.0, *)) {
+            self.tabBar.scrollEdgeAppearance = [UITabBarAppearance new];
+        }
+    #endif
+
     self.longPressRecognizer = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(handleLongPressGesture:)];
     [self.tabBar addGestureRecognizer:self.longPressRecognizer];
     
diff --git a/node_modules/react-native-navigation/lib/ios/TabBarItemAppearanceCreator.m b/node_modules/react-native-navigation/lib/ios/TabBarItemAppearanceCreator.m
index 74d1d37..fe92ff5 100644
--- a/node_modules/react-native-navigation/lib/ios/TabBarItemAppearanceCreator.m
+++ b/node_modules/react-native-navigation/lib/ios/TabBarItemAppearanceCreator.m
@@ -4,6 +4,13 @@ @implementation TabBarItemAppearanceCreator
 
 + (UITabBarItem *)createTabBarItem:(UITabBarItem *)mergeItem {
     UITabBarItem* tabBarItem = [super createTabBarItem:mergeItem];
+    #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+        if (@available(iOS 15.0, *)) {
+            tabBarItem.scrollEdgeAppearance =
+                mergeItem.scrollEdgeAppearance ?: [[UITabBarAppearance alloc] init];
+        }
+    #endif
+
     tabBarItem.standardAppearance = mergeItem.standardAppearance ?: [[UITabBarAppearance alloc] init];
     return tabBarItem;
 }
@@ -13,6 +20,15 @@ + (void)setTitleAttributes:(UITabBarItem *)tabItem titleAttributes:(NSDictionary
     tabItem.standardAppearance.stackedLayoutAppearance.normal.titleTextAttributes = titleAttributes;
     tabItem.standardAppearance.compactInlineLayoutAppearance.normal.titleTextAttributes = titleAttributes;
     tabItem.standardAppearance.inlineLayoutAppearance.normal.titleTextAttributes = titleAttributes;
+
+    #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+        if (@available(iOS 15.0, *)) {
+            tabItem.scrollEdgeAppearance.stackedLayoutAppearance.normal.titleTextAttributes = titleAttributes;
+            tabItem.scrollEdgeAppearance.compactInlineLayoutAppearance.normal.titleTextAttributes =
+                titleAttributes;
+            tabItem.scrollEdgeAppearance.inlineLayoutAppearance.normal.titleTextAttributes = titleAttributes;
+        }
+    #endif
 }
 
 + (void)setSelectedTitleAttributes:(UITabBarItem *)tabItem selectedTitleAttributes:(NSDictionary *)selectedTitleAttributes {
@@ -20,6 +36,17 @@ + (void)setSelectedTitleAttributes:(UITabBarItem *)tabItem selectedTitleAttribut
     tabItem.standardAppearance.stackedLayoutAppearance.selected.titleTextAttributes = selectedTitleAttributes;
     tabItem.standardAppearance.compactInlineLayoutAppearance.selected.titleTextAttributes = selectedTitleAttributes;
     tabItem.standardAppearance.inlineLayoutAppearance.selected.titleTextAttributes = selectedTitleAttributes;
+
+    #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+        if (@available(iOS 15.0, *)) {
+          tabItem.scrollEdgeAppearance.stackedLayoutAppearance.selected.titleTextAttributes =
+              selectedTitleAttributes;
+          tabItem.scrollEdgeAppearance.compactInlineLayoutAppearance.selected.titleTextAttributes =
+              selectedTitleAttributes;
+          tabItem.scrollEdgeAppearance.inlineLayoutAppearance.selected.titleTextAttributes =
+              selectedTitleAttributes;
+        }
+    #endif
 }
 
 @end
diff --git a/node_modules/react-native-navigation/lib/ios/UIViewController+RNNOptions.m b/node_modules/react-native-navigation/lib/ios/UIViewController+RNNOptions.m
index 4fb5b16..5f6910e 100644
--- a/node_modules/react-native-navigation/lib/ios/UIViewController+RNNOptions.m
+++ b/node_modules/react-native-navigation/lib/ios/UIViewController+RNNOptions.m
@@ -97,6 +97,13 @@ - (void)setTabBarItemBadge:(NSString *)badge {
 - (void)setTabBarItemBadgeColor:(UIColor *)badgeColor {
 	if (@available(iOS 13.0, *)) {
         self.tabBarItem.standardAppearance.stackedLayoutAppearance.normal.badgeBackgroundColor = badgeColor;
+
+        #if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000
+            if (@available(iOS 15.0, *)) {
+                self.tabBarItem.scrollEdgeAppearance.stackedLayoutAppearance.normal.badgeBackgroundColor =
+                    badgeColor;
+            }
+        #endif
     }
     else if (@available(iOS 10.0, *)) {
         self.tabBarItem.badgeColor = badgeColor;
